{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","filter","tasks","setTasks","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3a6bdc8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button type=\"button\" className=\"btn toggle-btn\"\r\n\t aria-pressed={props.isPressed}\r\n\t onClick={() => props.setFilter(props.name)}\r\n\t >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name} </span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n  const wasEditing = usePrevious(isEditing);\r\n  \r\n  function handleChange(e) {\r\n\t  setNewName(e.target.value);\r\n  }\r\n  \r\n  function handleSubmit(e) {\r\n\t  e.preventDefault();\r\n\t  props.editTask(props.id, newName);\r\n\t  setNewName(\"\");\r\n\t  setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n  <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n    <div className=\"form-group\">\r\n      <label className=\"todo-label\" htmlFor={props.id}>\r\n        New name for {props.name}\r\n      </label>\r\n      <input id={props.id} className=\"todo-text\" type=\"text\" \r\n\t   value={newName} onChange={handleChange} ref={editFieldRef} />\r\n    </div>\r\n    <div className=\"btn-group\">\r\n      <button type=\"button\" className=\"btn todo-cancel\"\r\n\t   onClick={() => setEditing(false)}>\r\n        Cancel\r\n        <span className=\"visually-hidden\">renaming {props.name}</span>\r\n      </button>\r\n      <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n        Save\r\n        <span className=\"visually-hidden\">new name for {props.name}</span>\r\n      </button>\r\n    </div>\r\n  </form>\r\n  );\r\n  const viewTemplate = (\r\n  <div className=\"stack-small\">\r\n    <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}\r\n\t\t ref={editButtonRef}\r\n\t\t>\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn__danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n      </div>\r\n  </div>\r\n  );\r\n  \r\n  useEffect(() => {\r\n\t  if (!wasEditing && isEditing) {\r\n\t\t  editFieldRef.current.focus();\r\n\t  }\r\n\t  if (wasEditing && !isEditing) {\r\n\t\t  editButtonRef.current.focus();\r\n\t  }\r\n  }, [wasEditing, isEditing]);\r\n  \r\n  function usePrevious(value) {\r\n\t  const ref = useRef();\r\n\t  useEffect(() => {\r\n\t\t ref.current = value; \r\n\t  });\r\n\t  return ref.current;\r\n  }\r\n\t\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n\tAll: () => true,\n\tActive: task => !task.completed,\n\tCompleted: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [filter, setFilter] = useState('All');\n  const [tasks, setTasks] = useState(props.tasks);\n  \n  function toggleTaskCompleted(id) {\n\t  const updatedTasks = tasks.map(task => {\n\t\t  if (id === task.id) {\n\t\t\t  return {...task, completed: !task.completed}\n\t\t  }\n\t\t  return task;\n\t  });\n\t  setTasks(updatedTasks)\n  }\n  \n  function deleteTask(id) {\n\t  const remainingTasks = tasks.filter(task => id !== task.id);\n\t  setTasks(remainingTasks);\n  }\n\t\n  function addTask(name) {\n\t  const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n\t  setTasks([...tasks, newTask]);\n  }\n  \n  function editTask(id, newName) {\n\t  const editedTaskList = tasks.map(task => {\n\t\t  if (id === task.id) {\n\t\t\t  return {...task, name: newName}\n\t\t  }\n\t\t  return task;\n\t  });\n\t  setTasks(editedTaskList);\n  }\n\t\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n\t\ttoggleTaskCompleted={toggleTaskCompleted}\n\t\tdeleteTask={deleteTask}\n\t\teditTask={editTask}\n      />\n    )\n  );\n  \n  const filterList = FILTER_NAMES.map(name => (\n      <FilterButton key={name} name={name}\n\t   isPressed={name === filter}\n\t   setFilter={setFilter}\n\t   />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks': 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n  \n  useEffect(() => {\n\t  if (tasks.length - prevTaskLength === -1) {\n\t\t  listHeadingRef.current.focus();\n\t  }\n  }, [tasks.length, prevTaskLength]);\n  \n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n\t  {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n\t  {headingText}\n\t  </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n\t{ id: \"todo-0\", name: \"Eat\", completed: true},\n\t{ id: \"todo-1\", name: \"Sleep\", completed: false},\n\t{ id: \"todo-2\", name: \"Repeat\", completed: false}\n];\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById('root'));\n"],"sourceRoot":""}